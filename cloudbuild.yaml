steps:
  # Step 1: Configure Docker to authenticate with Artifact Registry
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud auth configure-docker us-central1-docker.pkg.dev

  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', '-t', 'us-central1-docker.pkg.dev/beaming-botany-437905-u5/my-docker-repo/cicd:$COMMIT_SHA', '.'
    ]

  # Step 3: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 'us-central1-docker.pkg.dev/beaming-botany-437905-u5/my-docker-repo/cicd:$COMMIT_SHA'
    ]

      # Step 3: Set kubectl context to GKE cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'my-cicd-cluster'
      - '--zone'
      - 'europe-west3-b'
      - '--project'
      - 'beaming-botany-437905-u5'

      # Step 4: Deploy the image to GKE using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/spring-boot-app-deployment'
      - 'spring-boot-app=us-central1-docker.pkg.dev/beaming-botany-437905-u5/my-docker-repo/cicd:$SHORT_SHA'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=europe-west3-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=my-cicd-cluster'

substitutions:
  _GKE_CLUSTER: 'my-cicd-cluster'
  _GKE_ZONE: 'europe-west3-b'

# Define images that are built and pushed
images:
  - 'us-central1-docker.pkg.dev/beaming-botany-437905-u5/my-docker-repo/cicd:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
